@import url("https://fonts.googleapis.com/css?family=Merriweather&display=swap");
@import url("https://fonts.googleapis.com/css?family=Kosugi&display=swap");
@import url("https://fonts.googleapis.com/css?family=Domine:400,700&display=swap");

* {
  box-sizing: border-box; /* Ensures padding and borders are included in element's total width and height */
}

:root {
  --primary-blue: rgb(56, 56, 241);
  /* You can define more variables here */
  --secondary-blue: rgb(102, 102, 230);
}

body {
  margin: 0;
  padding: 0;
  background-color: rgba(0, 0, 0, 0);
  font-family: "Roboto", sans-serif;
  font-weight: 350;
  font-size: 14px;
  overflow-x: hidden;
}

/* #main-content {
  display: flex;
  flex-direction: column;
} */

/* Loader Overlay */
#loader {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ffffff; /* Background color of the loader */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999; /* Ensure the loader stays on top */
  transition: opacity 1s ease; /* Smooth fade-out transition */
}

/* Spinner Design */
.spinner {
  width: 80px;
  height: 80px;
  border: 6px solid #f3f3f3; /* Light grey border */
  border-top: 6px solid #3498db; /* Blue border on top */
  border-radius: 50%;
  animation: spin 1.5s linear infinite; /* Spin animation */
}

/* Spinner Animation */
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Optional: Prevent scrolling while loading */
body.loading {
  overflow: hidden;
}
#footer {
  border-top: solid;
  padding-right: 10px;
  padding-left: 10px;
  counter-reset: footnotes;
}

#graphic {
  display: flex;
  flex-direction: column;
  align-items: top;
  justify-content: space-around;
  width: 1000px;
  padding: 20px;
  max-width: 100%;
  margin: 0 auto;
  z-index: 10;
  position: relative;
}

#sections {
  position: relative;
  display: inline-block;
  flex-direction: column;
  width: 250px;
  top: 40px;
  margin-right: 50px;
}

svg {
  z-index: 100;
}
#vis-container {
  position: relative; /* Positioned ancestor for absolute positioning */
  /* Ensure the container spans the full viewport height if needed */
  min-height: 93vh;
  z-index: 10;
}

#vis {
  display: block;
  position: fixed;
  z-index: 10;
  height: auto;
  width: 100%;
  max-width: 1000px;
  flex: 2;
  margin-left: 200px;
  top: 0px;
}
/* static class */
#vis.static {
  position: absolute;
}

.categoryLegend {
  font-family: "Domine";
}

.step {
  margin-bottom: 0px;
  min-height: 700px;
  line-height: 1.4em;
  text-align: left;
  max-width: 700px;
  z-index: 101;
  position: relative;
  width: 90%; /* Adjust as needed */
}

.step:not(.ghost) {
  min-height: auto; /* Allows height to adjust based on content */
}

.step.z {
  z-index: 1000;
}

.step.ghost {
  position: relative;
  background-color: #ffffff;
  opacity: 0;
  z-index: -1;
}

.tick line {
  stroke: "red";
}

.tooltip {
  position: absolute;
  background-color: white;
  border: 0.5px solid black;
  padding: 5px;
  pointer-events: all;
  opacity: 0; /* Hidden by default */
  transition: opacity 0.3s ease; /* Smooth fade-in and fade-out */
  z-index: 99; /* Ensure tooltip appears above other elements */
  font-size: 12px;
}

/* Tooltip Visible State */
.tooltip.visible {
  opacity: 1;
}

#map-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 800px;
  height: 500px;
  display: none; /* Hidden by default */
  z-index: 11; /* Above SVG */
}

#map {
  width: 100%;
  height: 100%;
}

svg circle:hover {
  cursor: pointer;
}

/* Class to hide elements */
.hidden {
  display: none;
}

/* Style the custom content wrapper */
.map-popup {
  font-family: "Roboto";
}

strong {
  font-weight: 450;
}

#date-display {
  position: absolute;
  top: 10px;
  left: 10px;
  background-color: rgba(255, 255, 255, 0.8);
  padding: 5px 12px;
  border-radius: 4px;
  font-size: 14px;
  color: #333;
  pointer-events: none;
  z-index: 10; /* Ensure it appears above the map */
}

/* Wrapper for selectButton */
#select-wrapper {
  position: absolute;
  top: 10px;
  left: 150px; /* Adjust based on date-display width */
  background-color: rgba(255, 255, 255, 0.8);
  padding: 5px 10px;
  border-radius: 4px;
  font-size: 14px;
  color: #333;
  z-index: 10; /* Ensures it stays above the map */
}

/* Styles for selectButton */
#selectButton {
  width: 200px; /* Adjust as needed */
  padding: 0px 0px;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: rgba(255, 255, 255, 0.8);
  cursor: pointer;
  position: relative;
  z-index: 2;
}

/* Hover effect for selectButton */
#selectButton:hover {
  border-color: #999;
}

/* Styling for the X-axis label */
.x-label,
.y-label {
  font-size: 16px;
  text-anchor: middle;
  fill: #000; /* Optional: Set text color */
  /* Add any other desired styles */
}

.x-axis .tick text,
.y-axis .tick text {
  font-family: "Roboto", sans-serif; /* Specify your desired font */
  font-size: 12px; /* Set your desired font size */
  font-style: bold;
  fill: #555; /* Optional: Set text color */
}

.x-axis path,
.y-axis path,
.x-axis line,
.y-axis line {
  stroke: #ccc; /* Set axis line color */
}
.title {
  font-size: 20px;
  font-style: italic;
  text-align: center;
  margin-bottom: 5px;
}

.subtitle {
  font-size: 12px;
  font-style: italic;
  text-align: center;
  margin-bottom: 5px;
}

.footer-title {
  font-size: 18px;
  font-style: italic;
  text-align: left;
  padding: 2.5px;
}

.nodes {
  stroke: none; /* No stroke by default */
  fill: var(--primary-blue);
  transition: stroke 0.1s ease, stroke-width 0.1s ease; /* Smooth transitions */
}

.nodes.highlighted {
  stroke: var(--secondary-blue);
  stroke-width: 8;
}

[aria-describedby="footnote-label"] {
  counter-increment: footnotes; /* 1 */
  text-decoration: none; /* 2 */
  color: inherit; /* 2 */
  cursor: default; /* 2 */
  outline: none; /* 2 */
}

[aria-describedby="footnote-label"]::after {
  content: counter(footnotes);
  vertical-align: super;
  font-size: 0.75em;
  margin-left: 2px;
  color: var(--primary-blue);
  cursor: pointer;
}

[aria-describedby="footnote-label"]:focus::after {
  outline: thin dotted;
  outline-offset: 2px;
}

[aria-label="Back to content"] {
  font-size: 0.8em;
}

.label-rect {
  fill: white;
  stroke: black;
  stroke-width: 0.5px;
}

.label-text {
  font-size: 14px;
  fill: black;
  text-anchor: middle;
}

.centered-image {
  z-index: 0;
  position: relative;
  pointer-events: none;
}

.image-caption {
  font-size: 14px;
  fill: black;
}

@media screen and (min-width: 1100px) {
  .map-foreignobject {
    transform: translateX(40px); /* Shift right by 20px */
    width: calc(100% - 40px); /* Reduce width by 20px */
    box-sizing: border-box; /* Ensure padding and borders are included in size */
    z-index: 5; /* Adjust z-index if necessary */
  }

  #map {
    width: calc(100% - 40px); /* Match the reduced width */
    height: 100%; /* Maintain full height */
    width: 800px;
    height: 500px;
  }
}

/* smaller screens */
@media screen and (max-width: 1099px) {
  .step {
    width: 90%; /* Slightly less than 100% for margins */
    max-width: 700px; /* Maintain a max-width for better readability */
    margin: 0px auto; /* Center horizontally and add vertical spacing */
    text-align: center; /* Center the text content */
    border-width: 1px;
    border-style: solid;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 0px;
    padding: 20px;
  }

  #graphic {
    display: flex;
    flex-direction: column; /* Side by side on large screens */
    align-items: center;
  }

  #sections {
    flex: 1;
    max-width: 400px;
    width: 100%;
    margin-right: 0px;
  }

  #vis-container {
    display: flex; /* Ensure it's a flex container */
    align-items: center; /* Vertical centering */
    justify-content: center; /* Horizontal centering */
    width: 100%; /* Full width */
    max-width: 800px; /* Adjust as needed */
    margin: 0 auto; /* Center the container horizontally */
    padding: 0; /* Remove any padding */
    min-height: 93vh;
    position: relative;
    z-index: 10;
  }

  #vis {
    margin-left: 0;
    margin-right: 0;
    left: 50%; /* Position left edge at 50% of viewport width */
    transform: translateX(-50%); /* Shift left by 50% of #vis's width */
    width: 90%; /* Adjust width for better fit on small screens */
    max-width: 800px; /* Optional: Set a smaller max-width */
  }

  #vis svg {
    width: 100%; /* Makes the SVG take the full width of its container */
    margin: 0 auto; /* Centers the SVG within its container */
  }

  #vis.static {
    width: 100%; /* or another desired width */
    max-width: none; /* Remove max-width if necessary */
    left: 0; /* Adjust positioning as needed */
    transform: none; /* Remove translation to prevent shifting */
  }

  #map-container {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: auto;
  }

  /* Style for the map foreignObject */
  .map-foreignobject {
    display: flex;
    justify-content: center; /* Center the #map div horizontally within foreignObject */
    align-items: center; /* Center the #map div vertically within foreignObject */
  }
}

/* smaller screens */

@media screen and (max-width: 800px) {
  #sections {
    flex: 1;
    max-width: 350px;
    width: 100%;
  }

  #date-display {
    font-size: 12px;
    padding: 5px 20px;
  }

  #select-wrapper {
    font-size: 12px;
  }

  #selectButton {
    font-size: 12px;
  }

  .label-text {
    font-size: 10px;
  }

  .image-caption {
    font-size: 12px;
    fill: black;
  }
}

@media screen and (max-width: 600px) {
  /* body {
    font-size: 10px;
  }

  .title {
    font-size: 12px;
    margin-bottom: 2px;
  } */

  #sections {
    flex: 1;
    max-width: 275px;
    width: 100%;
  }

  .x-label,
  .y-label {
    font-size: 14px;
  }
}
